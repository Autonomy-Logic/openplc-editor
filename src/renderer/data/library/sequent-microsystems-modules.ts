import {
  BaseLibraryPouSchema,
  BaseLibrarySchema,
  BaseLibraryVariableSchema,
  baseTypeSchema,
} from '@root/types/PLC'
import { z } from 'zod'

const SequentMicrosystemsModulesVariablesSchema = BaseLibraryVariableSchema.extend({
  type: z.discriminatedUnion('definition', [
    z.object({
      definition: z.literal('base-type'),
      value: baseTypeSchema,
    }),
    z.object({
      definition: z.literal('derived-type'),
      value: z.string(),
    }),
  ]),
  initialValue: z
    .lazy((): z.Schema<unknown> => SequentMicrosystemsModulesVariablesSchema.pick({ type: true }))
    .optional(),
})

const SequentMicrosystemsModulesPouSchema = BaseLibraryPouSchema.extend({
  variables: z.array(SequentMicrosystemsModulesVariablesSchema),
})

export const SequentMicrosystemsModulesLibrarySchema = BaseLibrarySchema.extend({
  pous: z.array(SequentMicrosystemsModulesPouSchema),
})

type SequentMicrosystemsModulesLibrary = z.infer<typeof SequentMicrosystemsModulesLibrarySchema>

const SequentMicrosystemsModules: SequentMicrosystemsModulesLibrary = {
  name: 'Sequent Microsystems Modules',
  version: '1.0.0',
  author: 'Autonomy Logic',
  stPath: 'dummypath/wichwillbereplacedlater',
  cPath: 'dummypath/wichwillbereplacedlater',
  pous: [
    {
      name: 'SM_8RELAY',
      type: 'function-block',
      language: 'st',
      variables: [
        { name: 'STACK', class: 'input', type: { definition: 'base-type', value: 'SINT' } },
        { name: '01', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '02', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '03', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '04', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '05', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '06', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '07', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '08', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'DUMMY', class: 'output', type: { definition: 'base-type', value: 'SINT' } },
      ],
      body: 'DUMMY := STACK;',
      documentation: 'Update all outputs from 8-relays card',
    },
    {
      name: 'SM_16RELAY',
      type: 'function-block',
      language: 'st',
      variables: [
        { name: 'STACK', class: 'input', type: { definition: 'base-type', value: 'SINT' } },
        { name: '01', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '02', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '03', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '04', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '05', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '06', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '07', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '08', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '09', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '010', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '011', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '012', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '013', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '014', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '015', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: '016', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'DUMMY', class: 'output', type: { definition: 'base-type', value: 'SINT' } },
      ],
      body: 'DUMMY := STACK;',
      documentation: 'Update all outputs from 16-relays card',
    },
    {
      name: 'SM_8DIN',
      type: 'function-block',
      language: 'st',
      variables: [
        { name: 'STACK', class: 'input', type: { definition: 'base-type', value: 'SINT' } },
        { name: 'I1', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I2', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I3', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I4', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I5', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I6', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I7', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I8', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
      ],
      body: 'I1 := 0;',
      documentation: 'Get all inputs from Sequent microsystems 8 HV Inputs modules',
    },
    {
      name: 'SM_16DIN',
      type: 'function-block',
      language: 'st',
      variables: [
        { name: 'STACK', class: 'input', type: { definition: 'base-type', value: 'SINT' } },
        { name: 'I1', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I2', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I3', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I4', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I5', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I6', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I7', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I8', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I9', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I10', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I11', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I12', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I13', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I14', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I15', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I16', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
      ],
      body: 'I1 := 0;',
      documentation: 'Get all inputs from Sequent microsystems 16 digital inputs modules.',
    },
    {
      name: 'SM_4REL4IN',
      type: 'function-block',
      language: 'st',
      variables: [
        { name: 'STACK', class: 'input', type: { definition: 'base-type', value: 'SINT' } },
        { name: 'RELAY1', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'RELAY2', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'RELAY3', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'RELAY4', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'OPTO1', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'OPTO2', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'OPTO3', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'OPTO4', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'AC_OPTO1', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'AC_OPTO2', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'AC_OPTO3', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'AC_OPTO4', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'PWM1', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'PWM2', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'PWM3', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'PWM4', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'FREQ1', class: 'output', type: { definition: 'base-type', value: 'UINT' } },
        { name: 'FREQ2', class: 'output', type: { definition: 'base-type', value: 'UINT' } },
        { name: 'FREQ3', class: 'output', type: { definition: 'base-type', value: 'UINT' } },
        { name: 'FREQ4', class: 'output', type: { definition: 'base-type', value: 'UINT' } },
        { name: 'BUTTON', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
      ],
      body: 'OPTO1 := 0;',
      documentation: 'Get all inputs from and set all outputs to SM_4REL4IN modules',
    },
    {
      name: 'SM_INDUSTRIAL',
      type: 'function-block',
      language: 'st',
      variables: [
        { name: 'STACK', class: 'input', type: { definition: 'base-type', value: 'SINT' } },
        { name: 'LED1', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'LED2', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'LED3', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'LED4', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'Q0_10V1', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'Q0_10V2', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'Q0_10V3', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'Q0_10V4', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'Q4_20MA1', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'Q4_20MA2', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'Q4_20MA3', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'Q4_20MA4', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'QOD1', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'QOD2', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'QOD3', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'QOD4', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'OPTO1', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'OPTO2', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'OPTO3', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'OPTO4', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'I0_10V1', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'I0_10V2', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'I0_10V3', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'I0_10V4', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'I4_20MA1', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'I4_20MA2', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'I4_20MA3', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'I4_20MA4', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'OWB_T1', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'OWB_T2', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'OWB_T3', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'OWB_T4', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
      ],
      body: 'OPTO1 := 0;',
      documentation: 'Get all input and set all outputs of a Sequent Microsystems Industrial Automation card.',
    },
    {
      name: 'SM_RTD',
      type: 'function-block',
      language: 'st',
      variables: [
        { name: 'STACK', class: 'input', type: { definition: 'base-type', value: 'SINT' } },
        { name: 'TEMP1', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'TEMP2', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'TEMP3', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'TEMP4', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'TEMP5', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'TEMP6', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'TEMP7', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'TEMP8', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
      ],
      body: 'TEMP1 := 0.0;',
      documentation: 'Get all temperature inputs from SM_RTD modules as REAL values in deg Celsius',
    },
    {
      name: 'SM_BAS',
      type: 'function-block',
      language: 'st',
      variables: [
        { name: 'STACK', class: 'input', type: { definition: 'base-type', value: 'SINT' } },
        { name: 'TRIAC1', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'TRIAC2', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'TRIAC3', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'TRIAC4', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'LED1', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'LED2', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'LED3', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'LED4', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'IN1_T', class: 'input', type: { definition: 'base-type', value: 'UINT' } },
        { name: 'IN2_T', class: 'input', type: { definition: 'base-type', value: 'UINT' } },
        { name: 'IN3_T', class: 'input', type: { definition: 'base-type', value: 'UINT' } },
        { name: 'IN4_T', class: 'input', type: { definition: 'base-type', value: 'UINT' } },
        { name: 'IN5_T', class: 'input', type: { definition: 'base-type', value: 'UINT' } },
        { name: 'IN6_T', class: 'input', type: { definition: 'base-type', value: 'UINT' } },
        { name: 'IN7_T', class: 'input', type: { definition: 'base-type', value: 'UINT' } },
        { name: 'IN8_T', class: 'input', type: { definition: 'base-type', value: 'UINT' } },
        { name: 'Q0_10V1', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'Q0_10V2', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'Q0_10V3', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'Q0_10V4', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'UNIV1', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'UNIV2', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'UNIV3', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'UNIV4', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'UNIV5', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'UNIV6', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'UNIV7', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'UNIV8', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'DRY_C1', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'DRY_C2', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'DRY_C3', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'DRY_C4', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'DRY_C5', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'DRY_C6', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'DRY_C7', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'DRY_C8', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'OWB_T1', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'OWB_T2', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'OWB_T3', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'OWB_T4', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
      ],
      body: 'DRY_C1 := 0;',
      documentation: 'Get all input and set all outputs of a Sequent Microsystems Building Automation card.',
    },
    {
      name: 'SM_HOME',
      type: 'function-block',
      language: 'st',
      variables: [
        { name: 'STACK', class: 'input', type: { definition: 'base-type', value: 'SINT' } },
        { name: 'RELAY1', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'RELAY2', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'RELAY3', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'RELAY4', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'RELAY5', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'RELAY6', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'RELAY7', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'RELAY8', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'Q0_10V1', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'Q0_10V2', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'Q0_10V3', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'Q0_10V4', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'QOD1', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'QOD2', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'QOD3', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'QOD4', class: 'input', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'OPTO1', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'OPTO2', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'OPTO3', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'OPTO4', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'OPTO5', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'OPTO6', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'OPTO7', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'OPTO8', class: 'output', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'ADC1', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'ADC2', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'ADC3', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'ADC4', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'ADC5', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'ADC6', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'ADC7', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'ADC8', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'OWB_T1', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'OWB_T2', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'OWB_T3', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
        { name: 'OWB_T4', class: 'output', type: { definition: 'base-type', value: 'REAL' } },
      ],
      body: 'OPTO1 := 0;',
      documentation: 'Get all inputs and set all outputs of a Sequent Microsystems Home Automation card.',
    },
    {
      name: 'SM_8MOSFET',
      type: 'function-block',
      language: 'st',
      variables: [
        { name: 'STACK', class: 'input', type: { definition: 'base-type', value: 'SINT' } },
        { name: 'MOS1', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'MOS2', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'MOS3', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'MOS4', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'MOS5', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'MOS6', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'MOS7', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'MOS8', class: 'input', type: { definition: 'base-type', value: 'BOOL' } },
        { name: 'DUMMY', class: 'local', type: { definition: 'base-type', value: 'SINT' } },
      ],
      body: 'DUMMY := STACK;',
      documentation: 'Update all outputs from 8-mosfets card',
    },

  ],
}

export { SequentMicrosystemsModules }
